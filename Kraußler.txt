/*
 * GccApplication1.c
 *
 * Created: 04.02.2019 12:11:23
 * Author : krauss140479
 */ 

#include <avr/io.h>
#include <avr/interrupt.h>
volatile uint8_t counter = 0;

int main(void)
{
	//Eingänge und Ausgänge
        DDRD |= (1<<DDD2);
	DDRD |= (1<<DDD3);
        DDRD |= (1<<DDD4);
	DDRD |= (1<<DDD5);
	DDRD |= (1<<DDD6);
	DDRD |= (1<<DDD7);
	DDRC &= ~(1<<DDC0);
	DDRC &= ~(1<<DDC1);
	DDRC &= ~(1<<DDC2);
	
	//Timer auf 1 Sekunde
	TCCR1A = 0;
	TCCR1B = 0;
	TCNT1 = 0;
	
	OCR1A = 62499;
	TCCR1B |= (1<<WGM12);
	TCCR1B |= (1<<CS12)|(1<<CS11)|(0<<CS10);
	TIMSK1 |= (1<<OCIE1A);
	sei();
	
	

	while (1) 
   	{
		PORTB = counter;
	if (counter > 7)
	{
		counter = 0;
	}	
	
	if ((PINC0==1) && (PINC1==1) && (PINC2==1))
	{
		PORTB |= (1<<PORTB5);
	}
	else{
		PORTB ^= (1<<PORTB5);
	}
	
	
	if ((PINC0==1) | (PINC1==1) | (PINC2==1))
	{
		PORTB |= (1<<PORTB6);
	}
	else{
		PORTB ^= (1<<PORTB6);
	}
	
	
	if ((PINC0==1) ^ (PINC1==1) ^ (PINC2==1))
	{
		PORTB |= (1<<PORTB7);
	}
	else{
		PORTB ^= (1<<PORTB7);
	}
	
    }
}

ISR (TIMER0_COMPA_vect){
	counter ++;
}